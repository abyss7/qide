# =============================================================================
# Command-line arguments, with default values.
# =============================================================================

declare_args() {
  # Build for debugging.
  config_for_debug = false

  # Build version.
  version = exec_script("//build/version.py", [], "value")
}

# =============================================================================
# Setup configurations.
# =============================================================================

default_configs = [
  "//build/config:base",
]

if (config_for_debug) {
  default_configs += [ "//build/config:debug" ]
} else {
  default_configs += [ "//build/config:release" ]
}

if (os == "linux") {
  default_configs += [
    "//build/config/linux:base",
    "//build/config/linux:qt5",
  ]
}

# =============================================================================
# Set defaults.
# =============================================================================

set_defaults("executable") {
  configs = default_configs
}

set_defaults("shared_library") {
  configs = default_configs
}

set_defaults("source_set") {
  configs = default_configs
}

set_defaults("static_library") {
  configs = default_configs
}

# =============================================================================
# Filter platform-specific sources.
# =============================================================================

linux_sources_filters = [
  "*_linux.h",
  "*_linux.cc",
  "*_linux_test.h",
  "*_linux_test.cc",
]

sources_assignment_filter = []
if (os != "linux") {
  sources_assignment_filter += linux_sources_filters
}

set_sources_assignment_filter(sources_assignment_filter)

# =============================================================================
# Setup toolchain.
# =============================================================================

if (os == "linux") {
  set_default_toolchain("//build/toolchain/linux:clang")
}
