config("base") {
  cflags = [
    "-fPIC",
    "-pipe",
    "-pthread",
    "-Wall",
    "-Wsign-compare",
    "-Werror",
    "-Wno-error=unknown-warning-option",
    "-Wno-inconsistent-missing-override",
  ]
  cflags_cc = [ "-std=c++11" ]
  include_dirs = [
    "//src",
    "$root_gen_dir/src",
  ]
}

config("debug") {
  cflags = [
    "-g",
    "-O0",
  ]
  ldflags = [
    "-rpath",
    rebase_path("$root_out_dir"),
  ]
}

config("release") {
  cflags = [
    "-fomit-frame-pointer",
    "-O3",
  ]
  defines = [ "NDEBUG" ]
  ldflags = [
    "-rpath",
    rebase_path("$root_out_dir"),  # TODO: remove it when building for distribution.
  ]
}

config("version") {
  defines = [ "VERSION=\"$version\"" ]
}

config("llvm_includes") {
  defines = exec_script("//build/llvm.py", [ "defines" ], "list lines")
  include_dirs = exec_script("//build/llvm.py", [ "includedir" ], "list lines")
}

config("llvm") {
  lib_dirs = exec_script("//build/llvm.py", [ "libdir" ], "list lines")

  libs = [ "c" ]
  libs += [
    "clangTooling",
    "clangFrontendTool",
    "clangFrontend",
    "clangDriver",
    "clangSerialization",
    "clangCodeGen",
    "clangParse",
    "clangSema",
    "clangAnalysis",
    "clangEdit",
    "clangAST",
    "clangLex",
    "clangBasic",
  ]
  libs += exec_script("//build/llvm.py", [ "libs" ], "list lines")
  libs += exec_script("//build/llvm.py", [ "system-libs" ], "list lines")
}
